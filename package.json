{
  "name": "react-svg-drag-and-select",
  "version": "1.0.3",
  "description": "A SVG playground to drag and select shape elements.",
  "repository": "evenchange4/react-svg-drag-and-select",
  "author": "Michael Hsu <evenchange4@gmail.com>",
  "bugs": {
    "url": "https://github.com/evenchange4/react-svg-drag-and-select/issues",
    "email": "evenchange4@gmail.com"
  },
  "homepage": "https://github.com/evenchange4/react-svg-drag-and-select#readme",
  "main": "lib/index.js",
  "license": "MIT",
  "files": [
    "lib",
    "output"
  ],
  "engineStrict": true,
  "engines": {
    "node": ">=8.0.0"
  },
  "scripts": {
    "clean": "rm -rf {lib,output,storybook-static}",
    "start": "start-storybook -p 6006",
    "build-storybook": "build-storybook",
    "prebuild": "npm run clean && npm run build-storybook",
    "build": "NODE_ENV=production babel src --out-dir lib --ignore example.js,test.js",
    "test": "NODE_ENV='test' TZ='UTC' jest --coverage --runInBand",
    "test:watch": "npm run test -- --watch",
    "eslint": "eslint ./",
    "format": "prettier --trailing-comma all --single-quote --write 'src/**/*.js' '.storybook/*.js'"
  },
  "dependencies": {
    "prop-types": "^15.5.10",
    "ramda": "^0.24.1",
    "react": "^15.6.1",
    "react-dom": "^15.6.1"
  },
  "devDependencies": {
    "@storybook/addon-actions": "^3.2.6",
    "@storybook/addon-info": "^3.2.9",
    "@storybook/addon-links": "^3.2.6",
    "@storybook/addon-options": "^3.2.6",
    "@storybook/addon-storyshots": "^3.2.8",
    "@storybook/react": "^3.2.8",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.0.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-import": "^1.4.0",
    "babel-plugin-module-resolver": "v3.0.0-beta.5",
    "babel-plugin-transform-rename-import": "^2.1.1",
    "babel-preset-env": "^1.6.0",
    "babel-preset-react-app": "^3.0.2",
    "babel-preset-stage-0": "^6.24.1",
    "bower": "^1.8.0",
    "codecov": "^2.3.0",
    "enzyme": "^2.9.1",
    "enzyme-to-json": "^1.5.1",
    "eslint": "^4.6.1",
    "eslint-config-airbnb": "^15.1.0",
    "eslint-config-prettier": "^2.4.0",
    "eslint-config-react-app": "^2.0.0",
    "eslint-plugin-flowtype": "^2.35.1",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jest": "^21.1.0",
    "eslint-plugin-jsx-a11y": "^5.0.3",
    "eslint-plugin-prettier": "^2.2.0",
    "eslint-plugin-react": "^7.3.0",
    "jest": "^21.1.0",
    "prettier": "^1.6.1",
    "purescript": "^0.11.6",
    "purs-loader": "^3.1.1",
    "react-test-renderer": "^15.6.1"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}",
      "!src/**/*.test.{js,jsx}",
      "!src/**/*.example.{js,jsx}"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/lib/",
      "<rootDir>/output/"
    ]
  },
  "babel": {
    "presets": [
      "babel-preset-react-app",
      "babel-preset-stage-0",
      [
        "babel-preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ]
    ],
    "plugins": [
      [
        "transform-rename-import",
        {
          "original": "^./(.+?)\\.purs$",
          "replacement": "../../../output/$1"
        }
      ],
      "babel-plugin-add-module-exports",
      [
        "babel-plugin-import",
        {
          "libraryName": "ramda",
          "libraryDirectory": "src",
          "camel2DashComponentName": false
        }
      ]
    ]
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": [
      "react-app",
      "airbnb",
      "prettier",
      "prettier/flowtype",
      "prettier/react",
      "plugin:jest/recommended"
    ],
    "plugins": [
      "prettier",
      "jest"
    ],
    "env": {
      "jest/globals": true
    },
    "rules": {
      "react/jsx-filename-extension": [
        1,
        {
          "extensions": [
            ".js"
          ]
        }
      ],
      "import/no-extraneous-dependencies": 0,
      "jsx-a11y/no-static-element-interactions": 0,
      "react/forbid-prop-types": 0,
      "react/require-default-props": 0,
      "prettier/prettier": [
        "error",
        {
          "singleQuote": true,
          "trailingComma": "all"
        }
      ]
    }
  }
}
